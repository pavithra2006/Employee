<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="10" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-18T15:15:37 UTC" name="All Test Suite" finished-at="2023-04-18T15:23:44 UTC" duration-ms="487041">
    <groups>
    </groups>
    <test started-at="2023-04-18T15:15:37 UTC" name="Employee" finished-at="2023-04-18T15:23:44 UTC" duration-ms="487041">
      <class name="com.employee.tests.PostTests">
        <test-method signature="createEmployee(java.lang.reflect.Method)[pri:0, instance:com.employee.tests.PostTests@47987356]" started-at="2023-04-18T15:20:42 UTC" name="createEmployee" finished-at="2023-04-18T15:21:43 UTC" duration-ms="61000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.employee.tests.PostTests.createEmployee(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployee -->
        <test-method signature="createEmployeeUsingJSONObject(java.lang.reflect.Method)[pri:0, instance:com.employee.tests.PostTests@47987356]" started-at="2023-04-18T15:21:43 UTC" name="createEmployeeUsingJSONObject" finished-at="2023-04-18T15:22:44 UTC" duration-ms="60497" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.employee.tests.PostTests.createEmployeeUsingJSONObject(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployeeUsingJSONObject -->
        <test-method signature="createEmployeeFromExternalFile(java.lang.reflect.Method)[pri:0, instance:com.employee.tests.PostTests@47987356]" started-at="2023-04-18T15:22:44 UTC" name="createEmployeeFromExternalFile" finished-at="2023-04-18T15:23:44 UTC" duration-ms="60460" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.employee.tests.PostTests.createEmployeeFromExternalFile(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createEmployeeFromExternalFile -->
      </class> <!-- com.employee.tests.PostTests -->
      <class name="com.employee.tests.GetTests">
        <test-method signature="getEmployee(java.lang.reflect.Method)[pri:0, instance:com.employee.tests.GetTests@53fdffa1]" started-at="2023-04-18T15:15:37 UTC" name="getEmployee" finished-at="2023-04-18T15:16:40 UTC" duration-ms="62498" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.employee.tests.GetTests.getEmployee(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEmployee -->
        <test-method signature="getEmployeeByID(int,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.employee.tests.GetTests@53fdffa1]" started-at="2023-04-18T15:16:40 UTC" name="getEmployeeByID" data-provider="getIdList" finished-at="2023-04-18T15:17:40 UTC" duration-ms="60540" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Tiger Nixon]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.employee.tests.GetTests.getEmployeeByID(int,java.lang.String,java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEmployeeByID -->
        <test-method signature="getEmployeeByID(int,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.employee.tests.GetTests@53fdffa1]" started-at="2023-04-18T15:17:40 UTC" name="getEmployeeByID" data-provider="getIdList" finished-at="2023-04-18T15:18:41 UTC" duration-ms="60541" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Garrett Winters]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.employee.tests.GetTests.getEmployeeByID(int,java.lang.String,java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEmployeeByID -->
        <test-method signature="getEmployeeByID(int,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.employee.tests.GetTests@53fdffa1]" started-at="2023-04-18T15:18:41 UTC" name="getEmployeeByID" data-provider="getIdList" finished-at="2023-04-18T15:19:41 UTC" duration-ms="60402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashton Cox]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.employee.tests.GetTests.getEmployeeByID(int,java.lang.String,java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEmployeeByID -->
        <test-method signature="getEmployeeByID(int,java.lang.String,java.lang.reflect.Method)[pri:0, instance:com.employee.tests.GetTests@53fdffa1]" started-at="2023-04-18T15:19:41 UTC" name="getEmployeeByID" data-provider="getIdList" finished-at="2023-04-18T15:20:42 UTC" duration-ms="60516" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Cedric Kelly]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[public void com.employee.tests.GetTests.getEmployeeByID(int,java.lang.String,java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getEmployeeByID -->
        <test-method signature="postmanGetCall()[pri:0, instance:com.employee.tests.GetTests@53fdffa1]" started-at="2023-04-18T15:20:42 UTC" name="postmanGetCall" finished-at="2023-04-18T15:20:42 UTC" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postmanGetCall -->
        <test-method signature="postmanGetAllWorkspaces()[pri:0, instance:com.employee.tests.GetTests@53fdffa1]" started-at="2023-04-18T15:20:42 UTC" name="postmanGetAllWorkspaces" finished-at="2023-04-18T15:20:42 UTC" duration-ms="339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postmanGetAllWorkspaces -->
      </class> <!-- com.employee.tests.GetTests -->
    </test> <!-- Employee -->
  </suite> <!-- All Test Suite -->
</testng-results>
